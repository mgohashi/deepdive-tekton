apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: my-sonaqube
    name: postgresql-my-sonarqube-data
    namespace: cicd-tools
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    volumeMode: Filesystem
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: my-sonaqube
    name: sonaqube
    namespace: cicd-tools
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        description: The SonarQube Docker image
        tags: sonaqube
      from:
        kind: DockerImage
        name: sonarqube:8-community
      importPolicy: {}
      name: 8-community
      referencePolicy:
        type: Source
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: my-sonarqube
      deploymentconfig: my-sonarqube
    name: my-sonarqube
    namespace: cicd-tools
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: my-sonarqube
      deploymentconfig: my-sonarqube
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.sonarqube.image.entrypoint: '["./bin/run.sh"]'
        labels:
          app: my-sonarqube
          deploymentconfig: my-sonarqube
      spec:
        containers:
        - env:
          - name: SONARQUBE_JDBC_PASSWORD
            value: qL4QFR5SK7oVOcRF
          - name: SONARQUBE_JDBC_URL
            value: jdbc:postgresql://postgresql-my-sonarqube/sonar
          - name: SONARQUBE_JDBC_USERNAME
            value: sonar
          image: sonarqube:8-community
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          name: sonarqube
          ports:
          - containerPort: 9000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/sonarqube/data
            name: sonarqube-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: sonarqube-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - sonarqube
        from:
          kind: ImageStreamTag
          name: sonaqube:8-community
          namespace: cicd-tools
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: my-sonarqube
      deploymentconfig: postgresql-my-sonarqube
    name: postgresql-my-sonarqube
    namespace: cicd-tools
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: my-sonarqube
      deploymentconfig: postgresql-my-sonarqube
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: my-sonarqube
          deploymentconfig: postgresql-my-sonarqube
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: sonar
          - name: POSTGRESQL_PASSWORD
            value: qL4QFR5SK7oVOcRF
          - name: POSTGRESQL_DATABASE
            value: sonar
          image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql:9.6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 256Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: my-sonarqube-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: my-sonarqube-data
          persistentVolumeClaim:
            claimName: postgresql-my-sonarqube-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.6
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: my-sonarqube
    name: my-sonarqube
    namespace: cicd-tools
  spec:
    clusterIP: 172.30.135.240
    ports:
    - name: sonarqube
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: my-sonarqube
      deploymentconfig: my-sonarqube
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: my-sonarqube
    name: postgresql-my-sonarqube
    namespace: cicd-tools
  spec:
    clusterIP: 172.30.15.6
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: my-sonarqube
      deploymentconfig: postgresql-my-sonarqube
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: my-sonarqube
    name: my-sonarqube
    namespace: cicd-tools
  spec:
    to:
      kind: Service
      name: my-sonarqube
      weight: 100
    wildcardPolicy: None
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
